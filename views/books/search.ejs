<div class="my-5">
    <h1 class="text-center">도서검색</h1>
    <div class="row justify-content-end">
        <form name="frm" class="col-md-4 col-lg-3">
            <!-- 검색어 입력상자 만들기 -->
            <div class="input-group">
                <input name="query" class="form-control">
                <button class="btn btn-primary">검색</button>
            </div>
        </form>
    </div>
    <div id="div_books"></div> <!-- id 는 1개만 가능-->
    <div class="text-center">
        <button id="prev" class="btn btn-primary">이전</button>
        <span id="span_page" class="mx-3">1/10</span>
        <button id="next" class="btn btn-primary">다음</button>
    </div>
</div>

<!-- 도서검색 템플릿 -> html이 아니라서 compile이 필요 (데이터가져온게 성공했을때) div_books 안으로 들어감-->
<script id="temp_books" type="x-handlebars-template">
    <table class="table">
        <tr>
            <td colspan="6">
                <input type="checkbox" id="all">
                <a class="btn btn-primary btn-sm ms-3" id="save">선택 저장</a>
            </td>
        </tr>
        {{#each documents}}
        <tr>
            <td><input type="checkbox" class="chk" book="{{toString @this}}"></td>
            <td><img idx="{{@index}}" src="{{isImage thumbnail}}" width="40" style="cursor:pointer;"></td>
            <td>{{title}}</td>
            <td>{{authors}}</td>
            <td>{{fmtPrice price}}</td>
            <td><button class="btn btn-primary" book="{{toString @this}}">도서 등록</button></td>
        </tr>
        <%-include("modal.ejs")%>
        {{/each}}
    </table>
</script>

<script>
    Handlebars.registerHelper("toString", function(book){ // toString @this => Object가 string으로 바뀌어서 this에 들어감
        return JSON.stringify(book); //book에 대한 json을 string으로 바꿔주는 자바스크립 함수
    });
    Handlebars.registerHelper("isImage", function(image){
        if(image){
            return image;
        }else{
            return "http://via.placeholder.com/170x230";
        }
    });

    //금액 , 함수
    Handlebars.registerHelper("fmtPrice", function(price){
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "원"
    })
</script>

<!-- 도서검색 함수 만들기-->
<script>
    let query= "자바"; // 기본 값 변수 선언
    let page= 1;
    getBooks(); // 함수 실행 (쿼리랑 데이터를 받아서 결과를 출력)

    //선택 저장버튼을 클릭한 경우
    $("#div_books").on("click", "#save", function(){
        const chk=$("#div_books .chk:checked").length;
        if(chk == 0){
            alert("등록할 도서를 선택하세요.");
            return;
        }
        if(confirm(chk + "개 도서를 등록하시겠습니까?")){
            let count = 0;
            $("#div_books .chk:checked").each(function(){ //상태가 체크된것만 반복
                const book=JSON.parse($(this).attr("book"));
                const authors=book.authors.join();
                $.ajax({
                    type:"post",
                    url:"/books/search/insert",
                    async : false,
                    data:{...book, authors},
                    success:function(data){
                        if(data == 0) count++;
                    }
                });
            });

            setTimeout(function(){
                alert(count + "개 도서가 저장되었습니다.");
            $("#div_books .chk").prop("checked", false); //체크박스 선택 해제
            $("#div_books #all").prop("checked", false); // 전체 선택 체크박스 선택 해제
           }, 1000); //1초후에 실행
        }
    });


    //전체 선택 체크박스를 클릭한 경우
    $("#div_books").on("click", "#all", function(){ //id => #으로 가져오기
        if($(this).is(":checked")){ //this가 checked 됐는지 묻는것 (전체 선택한 경우)
            $("#div_books .chk").prop("checked", true);
        }else{
            $("#div_books .chk").prop("checked", false);
        }
    });

    // 각 행의 체크박스를 클릭한 경우
    $("#div_books").on("click", ".chk", function(){
        const all=$("#div_books .chk").length; // 전체 chk의 갯수를 구하는
        const chk=$("#div_books .chk:checked").length; //chk가 checked 된거
        if(all == chk) {
            $("#div_books #all").prop("checked", true);
        }else{
            $("#div_books #all").prop("checked", false);
        }
    });

    //도서 등록 버튼 클릭한 경우
    $("#div_books").on("click", "button", function(){
        const book=JSON.parse($(this).attr("book")); //string인 book을 가져와서?
        const authors=book.authors.join();

        if(confirm("도서 등록하시겠습니까?")) {
            $.ajax({
                type:"post",
                url:"/books/search/insert",
                data:{...book, authors},
                success:function(data){
                    if(data == '0'){
                        alert("도서가 등록되었습니다.");
                    }else{
                        alert("이미 등록된 도서입니다.");
                    }
                }
            })
        }
    });

    //이미지를 클릭한 경우
    $("#div_books").on("click", "img", function(){
        const idx= $(this).attr("idx");
        $("#modal" + idx).modal("show");
    });

    $("#next").on("click", function(){
        page++;
        getBooks(); // 페이지가 1씩 증가해서 목록 다시 가져오는것
    });

    $("#prev").on("click", function(){
        page--;
        getBooks();
    });

    $(frm).on("submit", function(e){ //name을 가져올땐 $(name) 바로 적으면된다.
        e.preventDefault();
        query=$(frm.query).val();
        page=1;
        if(query == ""){
            alert("검색어를 입력해주세요.");
            $(frm.query).focus();
        }else{
            getBooks(); // 검색어있을 때 getBooks()함수 호출
        }
    });

    function getBooks(){
        $.ajax({ // 화면 번쩍하지 않게 하는... 제이쿼리 사용
            type:"get",
            url:"https://dapi.kakao.com/v3/search/book?target=title",
            headers:{"Authorization": "KakaoAK 6256b727c3acb106515114d93a33f668"},
            data:{query:query, page:page, size:5}, // 키 : 값 순으로 
            success:function(data){
                console.log(data);
                const temp=Handlebars.compile($("#temp_books").html()); //html의 파일을 컴파일해 temp 저장
                $("#div_books").html(temp(data));

                //페이지 정보 출력
                const last=Math.ceil(data.meta.pageable_count/5); // Math.ceil() 올림 자바스크립 함수
                $("#span_page").html(`${page}/${last}`); //html로 출력

                // 페이지가 1페이지인 경우
                if(page == 1) $("#prev").attr("disabled", true); // attr : 속성을 바꿔주는
                else $("#prev").attr("disabled", false);

                // 마지막 페이지일 때 
                if(data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>