<div class="my-5">
    <h1 class="text-center mb-5">주문관리</h1>
    <div>
        <select class="py-1" id="status">
            <option value="100">모든구매</option>
            <option value="0">결제대기중</option>
            <option value="1">결제확인</option>
            <option value="2">배송준비중</option>
            <option value="3">배송완료</option>
            <option value="4">주문완료</option>
        </select>
        <button id="btn-search" class="btn btn-success btn-sm">검색</button>
        <span class="ms-3">검색수: <span id="count">0건</span></span>
    </div>
    <hr>
    <div id="div_purchase"></div>
    <div id="pagination" class="pagination justify-content-center mt-3"></div>
    <%-include("modal.ejs")%>
</div>

<script id="temp_purchase" type="x-handlebars-template">
    <table class="table">
    {{#each .}}
        <tr>
            <td>{{pid}}</td>
            <td>{{rname}}</td>
            <td>{{raddress1}}</td>
            <td>{{phone}}</td>
            <td>{{fmtsum}}원</td>
            <td>{{fmtdate}}</td>
            <td pid="{{pid}}">
                <!-- 0: 결제대기중 | 1. 결제확인 | 2. 배송준비중 | 3. 배송완료 | 4. 주문완료 -->
                <select class="py-1 status">
                    <option value="0" {{status status 0}}>결제대기중</option>
                    <option value="1" {{status status 1}}>결제확인</option>
                    <option value="2" {{status status 2}}>배송준비중</option>
                    <option value="3" {{status status 3}}>배송완료</option>
                    <option value="4" {{status status 4}}>주문완료</option>
                </select>
                <button class="btn-update btn btn-danger btn-sm">수정</button>
            </td>
            <td><button class="btn-modal btn btn-success btn-sm" pid="{{pid}}">주문상품</button></td>
        </tr>
    {{/each}}
    </table>
</script>

<script>
    Handlebars.registerHelper("status", function(status, value){
        if(status == value){
            return "selected";
        }
    });
</script>

<script>
    let page = 1;

    getTotal();

    //주문상품 버튼을 클릭한 경우
    $("#div_purchase").on("click", ".btn-modal", function(){
        const pid=$(this).attr("pid");
        $.ajax({
            type:"get",
            url:"/order/book.json",
            data:{pid},
            success:function(data){
                console.log(data); // books 가 안오고 왜? object??
                const temp=Handlebars.compile($("#temp_orders").html());
                $("#div_orders").html(temp(data));
                $("#modal").modal("show");
            }
        });
    });


    //수정버튼을 클릭한 경우
    $("#div_purchase").on("click", ".btn-update", function(){
        const pid=$(this).parent().attr("pid");
        const status=$(this).parent().find(".status").val();
        //alert(pid + ":" + status);

        $.ajax({
            type:"post",
            url:"/order/status/update",
            data:{pid, status},
            success:function(){
                page = 1;
                getTotal(); //상태가 변경되어서 다시 갯수 구하러
                alert("상태가 변경되었습니다.");
            }
        })
    });


    //검색버튼 클릭했을 때,
    $("#btn-search").on("click", function(){
        page = 1;
        getTotal();
    });



    function getPurchase(){
        $.ajax({
            type:"get",
            url:"/order/admin.json",
            data:{page, status:$("#status").val()},
            success:function(data){
                const temp=Handlebars.compile($("#temp_purchase").html());
                $("#div_purchase").html(temp(data));
            }
        })
    }


    function getTotal(){
        $.ajax({
            type:"get",
            url:"/order/count",
            data:{status:$("#status").val()},
            success:function(data){

                if(data == 0){
                    alert("검색된 구매내역이 없습니다.");
                    $("#status").val("100").attr("selected", true);
                    $("#btn-search").click();
                }else{
                    $("#count").html(data);
                    const totalPages = Math.ceil(data/3);
                    $("#pagination").twbsPagination("changeTotalPages", totalPages, page)
                }
            }
        });
    }



    $('#pagination').twbsPagination({
        totalPages:10, //총 페이지 번호 수
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
        startPage : 1, // 시작 시 표시되는 현재 페이지
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
        first : '<<', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
        prev : '<', // 이전 페이지 버튼에 쓰여 있는 텍스트
        next : '>', // 다음 페이지 버튼에 쓰여 있는 텍스트
        last : '>>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
        onPageClick: function (event, clickPage) {
            page=clickPage;
            getPurchase(); 
        }
    });
</script>